@model PaginatedList<SurfBoardsv2.Models.Board>
@using SurfBoardsv2.Models
@using Microsoft.AspNetCore.Identity
@inject SignInManager<SurfBoardsv2User> SignInManager
@inject UserManager<SurfBoardsv2User> UserManager


@{
    ViewData["Title"] = "Vores Boards";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Boards</h1>
@if (User.Identity.IsAuthenticated && User.IsInRole("Administrator"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<form asp-controller="boards" asp-action="Index" Method="get">
    <p>
        Søgefelt: @Html.TextBox("SearchString")
        <input type="submit" value="Filter" />
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Length
            </th>
            <th>
                Width
            </th>
            <th>
                Thickness
            </th>

            <th>
                Volume
            </th>
            <th>
                Type
            </th>
            <th>
                Price
            </th>
            <th>
                Equipment
            </th>
            <th>
                ImageFile
            </th>
            <th>
                IsAvailable
            </th>
            <th></th>
        </tr>
    </thead>
    
    <tbody>
        @foreach (var board in Model)
        {
            <tr>
                <td>@board.Name</td>
                <td>@board.Length"</td>
                <td>@board.Width"</td>
                <td>@board.Thickness"</td>
                <td>@board.Volume l</td>
                <td>@board.Type</td>
                <td>@board.Price €</td>
                <td>@board.Equipment</td>
                <td>
                    <img src="@Url.Content("~/Images/"+board.ImageFileName)" style="height:25%;width:25%;object-fit:cover;" />
                </td>
                <td>@(board.IsAvailable ? "Ledig" : "Ikke Ledig")</td>
                <td>
                    <a asp-action="Details" asp-route-id="@board.Id">Details</a>
                    @if (User.Identity.IsAuthenticated && User.IsInRole("Administrator"))
                    {
                        <a asp-action="Edit" asp-route-id="@board.Id">Edit</a>
                        <a asp-action="Delete" asp-route-id="@board.Id">Delete</a>
                    }
                    @if (SignInManager.IsSignedIn(User) && board.IsAvailable)
                    {
                        <a asp-action="Create" asp-controller="Rent" asp-route-boardId="@board.Id" asp-route-userId="@UserManager.GetUserId(User)" class="btn btn-primary">Rent</a>
                    }
                </td>
            </tr>
        }
        <p id="p1">
        </p>
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>